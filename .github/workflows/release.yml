name: Another release job

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  prepare:
    name: Prepare release
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_info.outputs.tag_name }}
      release_name: ${{ steps.release_info.outputs.release_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Compute release name and tag
        id: release_info
        run: |
          echo "tag_name=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "release_name=Release ${GITHUB_REF_NAME}" >> $GITHUB_ENV

  build-and-release:
    name: Build and Release - ${{ matrix.platform.release_for }}
    needs: prepare
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: stn
            name: stn-Darwin-x86_64.tar.gz
            command: build
          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: stn
            name: stn-Darwin-aarch64.tar.gz
            command: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Create tarball
        run: |
          cd ${{ github.workspace }}/target
          tar -czvf ${{ github.workspace }}/assets/${{ matrix.platform.name }} ./${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Create Release and Upload Binary
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ needs.prepare.outputs.release_name }}
          tag_name: ${{ needs.prepare.outputs.tag_name }}
          files: ${{ github.workspace }}/assets/${{ matrix.platform.name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
